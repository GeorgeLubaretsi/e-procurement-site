module TestFile

  def self.findCompetitors
    #this is going to take some memory
    companies = {}
    Tender.find_each do |tender|
      ids = []
      tender.bidders.each do |bidder|
        ids.push(bidder.organization_id)
      end
      ids.each do |org_id|
        if not companies[org_id]
          companies[org_id] = {}
        end
        ids.each do |competitor_id|
          if not competitor_id == org_id
            count = companies[org_id][competitor_id]
            if not count
              count = 0
            end
            count = count + 1
            companies[org_id][competitor_id] = count
          end#if not same org
        end#for all competitor ids
      end#for all orgs
    end#for all tenders

    def self.competitorSort(a,b)
      if a[1] < b[1]
        return 1
      else
        return -1
      end
    end
    # we now have a list of companies each with a list of companies they have competed with
    # go through each company find its top 3 competitors and store this in the db

    companies.each do |org_id, competitors|
      competitors = competitors.sort {|a,b| self.competitorSort(a,b) }
      #store top 3
      count = 0
      competitors.each do |competitor_id, value|
        count = count + 1
        if value < 2 or count > 3
          break
        end
        puts "org: " + org_id.to_s + " comp: "+ competitor_id.to_s + " count: " + value.to_s
        #db_competitor = Competitor.new
        #db_competitor.organization_id = org_id
        #db_competitor.rival_org_id = competitor_id
        #db_competitor.num_tenders = value
        #db_competitor.save
      end
    end
  end
  
  #filled out with tasks to test
  def self.run
    puts "finding competitors"
    self.findCompetitors
  end

end

